RSQLAlchemy
===========

OOP abstraction of databases (R version of Python package SQLAlchemy)

RSQLAlchemy is an R package that abstracts sqlite databases. Sqlite objects
such as databases, tables and records are abstracted in an object oriented
programming (OOP) framework. To process database records, one invokes methods
associated with the OOP representations in lieu of sql queries. This package provides database
read and write functionalities and is equivalent to the object oriented ab-
straction component (ORM) of the python package, SQLAlchemy. See http://www.sqlalchemy.org/


### ENGINE
# initialize an engine
testDB<-paste(system.file("exec",package="RSQLAlchemy"),"/test.db",sep="",collapse="")
myEngine=engine(databaseName=testDB)


## MAPTABLE
#map snp table structure to snp class
snp<-mapTable(
  tableName="snp",
  columns='snp_id="character",chr="character",all_A="character",all_B="character"',
  primaryKey="snp_id");
#create instances of snp (records for snp table)
SNPA <- snp(snp_id='SNPA', chr="1", all_A="T", all_B="C")


## SESSION
# start a session
mySession <- session()
# save or delete objects from session
mySession$add(SNPA) # add_all() saves multiple objects at once
mySession$delete(SNPA) # delete_all() removes multiple objects


# bind an engine to session
mySession$bind(engine(databaseName = testDB))

# query database
mySession$query("snp") #prints entire table
mySession$query("snp.snp_id") #prints snp_id column in table
mySession$query("snp", "snp.snp_id")
# process query results
mySession$query("snp")$orderBy("all_A") #tableRecords$orderBy() method applied to results of session$query()
mySession$query("snp")$filterBy(all_A == "A")
mySession$query("snp")$count()

# joins
mySession$join("snp", "genotype") # outerjoin
mySession$join("snp", "genotype")$filterBy(snp.snp_id == genotype.snp_id)
mySession$innerjoin("snp", "genotype", joinOn = "snp.snp_id==genotype.snp_id")
mySession$leftjoin("snp", "genotype", joinOn = "snp.snp_id==genotype.snp_id")
mySession$rightjoin("snp", "genotype", joinOn = "snp.snp_id==genotype.snp_id")

# commit
SNPINSERT <- snp(snp_id = "SNPINSERT", chr = "1", all_A = "T", all_B = "C")
mySession$add(SNPINSERT)
mySession$commit() #inserts into snp table in database a row with values associated wtih SNPINSERT